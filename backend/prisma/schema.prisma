// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  email      String     @unique
  name       String?
  password   String
  bio        String?
  profilePic String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  post       Post[]
  bookmark   Bookmark[]
}

model Post {
  id        String     @id @default(uuid())
  title     String
  content   String
  published Boolean    @default(false)
  author    User       @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  String
  blogImage String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Like      Like[]
  Comment   Comment[]
  bookmark  Bookmark[]
}

model Like {
  id     Int    @unique @default(autoincrement())
  blogId String
  blog   Post   @relation(fields: [blogId], references: [id], onDelete: Cascade)
}

model Comment {
  id      Int    @unique @default(autoincrement())
  blogId  String
  blog    Post   @relation(fields: [blogId], references: [id], onDelete: Cascade)
  content String
}

model Bookmark {
  id     Int    @unique @default(autoincrement())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  blogId String
  blog   Post   @relation(fields: [blogId], references: [id], onDelete: Cascade)
}
